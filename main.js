!function(){"use strict";class t{constructor(t){this.parent=t}render(){const t=document.createElement("div");return t.classList.add("board"),t}}class e{constructor(t){this.header=t}render(){const t=document.createElement("div");t.classList.add("column");const e=document.createElement("h2");return e.classList.add("column-head"),e.textContent=this.header,t.appendChild(e),t}}class s{constructor(t){this.text=t}render(){const t=document.createElement("div");t.classList.add("card");const e=document.createElement("p");e.classList.add("card-text"),e.textContent=this.text,t.appendChild(e);const s=document.createElement("div");return s.classList.add("card_close","inactive"),s.innerHTML="&times;",t.appendChild(s),t}mouseEnter(t){t.target.querySelector(".card_close").classList.remove("inactive")}mouseLeave(t){t.target.querySelector(".card_close").classList.add("inactive")}}class n{constructor(t){this.parent=t}render(){const t=document.createElement("form");t.classList.add("add-card-form");const e=document.createElement("textarea");e.classList.add("add-card-input","inactive"),e.placeholder="Enter a title for this card...",t.appendChild(e),this.input=e;const s=document.createElement("div");s.classList.add("buttons-section","inactive"),t.appendChild(s);const n=document.createElement("button");n.classList.add("add-card-button","inactive"),n.type="button",n.textContent="Add Card",s.appendChild(n);const o=document.createElement("button");o.classList.add("cancel-button","inactive"),o.type="button",o.innerHTML="&times;",s.appendChild(o);const a=document.createElement("button");return a.classList.add("add-another-card-button"),a.type="button",a.textContent="Add another card",t.appendChild(a),this.parent.appendChild(t),t}static showInput(t){t.querySelector(".add-another-card-button").classList.add("inactive"),t.querySelector(".add-card-input").classList.remove("inactive"),t.querySelector(".buttons-section").classList.remove("inactive"),t.querySelector(".add-card-button").classList.remove("inactive"),t.querySelector(".cancel-button").classList.remove("inactive")}static input(t){return t.querySelector(".add-card-input").value}static cancel(t){t.querySelector(".add-another-card-button").classList.remove("inactive");const e=t.querySelector(".add-card-input");e.value="",e.classList.add("inactive"),t.querySelector(".buttons-section").classList.add("inactive"),t.querySelector(".add-card-button").classList.add("inactive"),t.querySelector(".cancel-button").classList.add("inactive")}}var o=JSON.parse('{"todo":"TODO","inprogress":"IN PROGRESS","done":"DONE"}'),a=JSON.parse('{"todo":["Welcome to Trello!","This is a card!","Click on a card to see what\'s behind it"],"inprogress":["Invite your team","Drag people onto a card"],"done":["To learn more tricks check out the guide","Use as many boards as you want","Want to use keyboard shortcuts?","Want updates on new features?"]}');class i{static save(t){localStorage.setItem("boardState",JSON.stringify(t))}static load(){try{return JSON.parse(localStorage.getItem("boardState"))}catch(t){throw new Error("Invalid state")}}}class r{constructor(){this.todo=[],this.inprogress=[],this.done=[]}static from(t){const e=new r;return e.todo=t.todo,e.inprogress=t.inprogress,e.done=t.done,e}}class c{constructor(){this.actualElement=null,this.draggedElement=null,this.shadow=null,this.mousePosition={},this.distance=10,this.boardState=new r,this.onMouseDown=this.onMouseDown.bind(this),this.onMouseOver=this.onMouseOver.bind(this),this.onMouseUp=this.onMouseUp.bind(this)}onMouseOver=t=>{this.actualElement&&(this.shadow&&this.shadow.remove(),this.insertElement(this.shadow,t.clientX,t.clientY),this.draggedElement.style.top=t.clientY-this.mousePosition.y+"px",this.draggedElement.style.left=t.clientX-this.mousePosition.x+"px")};onMouseUp=t=>{if(!this.draggedElement)return;this.shadow&&(this.shadow.remove(),this.shadow=null),this.actualElement.classList.remove("hide");const e=this.actualElement.closest(".column").querySelector(".column-head").textContent,s=this.actualElement.querySelector(".card-text").textContent;this.insertElement(this.actualElement,t.clientX,t.clientY);const n=this.actualElement.closest(".column").querySelector(".column-head").textContent,a=i.load();let c;a&&(this.boardState=r.from(a));for(let t in o)if(o[t]===e&&(c=this.boardState[t].findIndex((t=>t===s)),c>-1&&this.boardState[t].splice(c,1)),o[t]===n){const e=this.actualElement.nextElementSibling.querySelector(".card-text");e?(c=this.boardState[t].findIndex((t=>t===e.textContent)),c>-1&&this.boardState[t].splice(c,0,s)):this.boardState[t].push(s)}i.save(this.boardState),this.draggedElement.remove(),this.draggedElement=null,this.actualElement=null,document.documentElement.removeEventListener("mouseup",this.onMouseUp),document.documentElement.removeEventListener("mouseover",this.onMouseOver)};onMouseDown=t=>{if(t.target.classList.contains("card_close"))return;if(this.actualElement=t.target.closest(".card"),!this.actualElement)return;t.preventDefault();const e=this.actualElement.getBoundingClientRect();this.mousePosition.x=t.clientX-e.left,this.mousePosition.y=t.clientY-e.top;const s=document.querySelector(".container");this.draggedElement=this.actualElement.cloneNode(!0),this.draggedElement.style.width=this.actualElement.clientWidth+"px",this.draggedElement.classList.add("dragged"),s.appendChild(this.draggedElement),this.draggedElement.style.top=t.clientY-this.mousePosition.y+"px",this.draggedElement.style.left=t.clientX-this.mousePosition.x+"px",this.shadow=this.actualElement.cloneNode(!0),this.shadow.style.backgroundColor="rgb(230, 229, 229)",this.shadow.style.boxShadow="none";for(const t of this.shadow.children)t.style.display="none";this.actualElement.classList.add("hide"),document.documentElement.addEventListener("mouseup",this.onMouseUp),document.documentElement.addEventListener("mouseover",this.onMouseOver)};insertElement(t,e,s){if(!t)return;this.draggedElement.classList.add("hide");const n=document.elementFromPoint(e,s),o=n.closest(".card"),a=n.closest(".column");if(a){if(o)s>o.getBoundingClientRect().top+o.offsetHeight/2?a.insertBefore(t,o.nextElementSibling):a.insertBefore(t,o);else{let n=document.elementFromPoint(e,s-this.distance),o=n.closest(".card");if(o)a.insertBefore(t,o.nextElementSibling);else{const e=a.querySelector(".column-head");if(n===e){let s=e.nextElementSibling.closest(".card");s&&a.insertBefore(t,s)}else{const e=a.querySelector(".add-card-form");a.insertBefore(t,e)}}}this.draggedElement.classList.remove("hide")}}init(){return document.documentElement.addEventListener("mousedown",this.onMouseDown),this}}(new class{constructor(){this.board=null,this.columns={},this.boardState=new r,this.mouseClick=this.mouseClick.bind(this)}init(){const t=document.querySelector(".container");let e;const s=i.load();e=s?r.from(s):a,this.drawUI(t,e),document.addEventListener("click",this.mouseClick),new c(this.boardState).init()}drawUI(a,r){const c=new t(a);let d,l,u,h;this.board=c.render(),a.appendChild(this.board);for(let t in o)this.columns[t]=new e(o[t]).render(),u=new n(this.columns[t]),h=u.render(),this.board.appendChild(this.columns[t]),this.boardState[t]=[],r[t].forEach((e=>{d=new s(e),l=d.render(),l.addEventListener("mouseenter",d.mouseEnter),l.addEventListener("mouseleave",d.mouseLeave),this.columns[t].insertBefore(l,h),this.boardState[t].push(e)})),i.save(this.boardState)}mouseClick=t=>{let e;if(t.preventDefault(),t.target.classList.contains("card_close")){e=i.load(),e&&(this.boardState=r.from(e));const s=t.target.closest(".card"),n=s.querySelector(".card-text").textContent,a=t.target.closest(".column").querySelector(".column-head").textContent;for(let t in o)if(o[t]===a)for(let e=0;e<this.boardState[t].length;e++)this.boardState[t][e]===n&&this.boardState[t].splice(e,1);s.remove(),i.save(this.boardState)}if(t.target.classList.contains("add-another-card-button")&&n.showInput(t.target.closest(".column")),t.target.classList.contains("cancel-button")&&n.cancel(t.target.closest(".column")),t.target.classList.contains("add-card-button")){e=i.load(),e&&(this.boardState=r.from(e));const a=t.target.closest(".column");let c=n.input(a);if(c){const t=a.querySelector(".column-head").textContent,e=a.querySelector(".add-card-form");let n=new s(c),r=n.render();r.addEventListener("mouseenter",n.mouseEnter),r.addEventListener("mouseleave",n.mouseLeave),a.insertBefore(r,e);for(let e in o)o[e]===t&&this.boardState[e].push(c);i.save(this.boardState)}n.cancel(a)}}}).init()}();
//# sourceMappingURL=main.js.map